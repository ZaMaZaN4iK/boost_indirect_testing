# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2015.

sudo: false
os:
    - linux

env:
    - BOOST_LIBRARIES=--libraries=accumulators,algorithm,align,any,application,array,asio,assert,assign,atomic,bimap,bind,chrono,circular_buffer,compatibility,compute,concept_check,config,container,context
    - BOOST_LIBRARIES=--libraries=conversion,convert,core,coroutine,coroutine2,crc,date_time,detail,disjoint_sets,dll,document,dynamic_bitset,endian,exception,filesystem,flyweight,foreach,format
    - BOOST_LIBRARIES=--libraries=function,functional,function_types,fusion,geometry,gil,graph,graph_parallel,heap,icl,integer,interprocess,intrusive,io,iostreams,iterator,lambda,lexical_cast
    - BOOST_LIBRARIES=--libraries=,locale,local_function,lockfree,log,logic,math,move,mpi,mpl,msm,multi_array,multi_index,multiprecision,numeric,optional,parameter,phoenix,polygon,pool
    - BOOST_LIBRARIES=--libraries=predef,preprocessor,program_options,property_map,property_tree,proto,ptr_container,python,random,range,ratio,rational,regex,scope_exit,serialization
    - BOOST_LIBRARIES=--libraries=signals,signals2,smart_ptr,sort,spirit,statechart,static_assert,sync,system,test,thread,throw_exception,timer,tokenizer,tr1,trie,tti,tuple,type_erasure
    - BOOST_LIBRARIES=--libraries=type_index,typeof,type_traits,units,unordered,utility,uuid,variant,vmd,wave,winapi,xpressive,
    # Libs list getting: echo -n "--libraries="; for i in $(ls -d */); do echo -n "${i%%/},"; done; echo

# Installing additional tools
addons:
  apt:
    packages:
    - valgrind
    - python-yaml
    - lcov

before_install:
    - BOOST_TAG=develop
    - echo OS is ${TRAVIS_OS_NAME}
    - wget https://raw.githubusercontent.com/boostorg/regression/develop/testing/src/run.py

script:
    - python run.py --runner=indirect_travisci_tests --toolsets=gcc --tag=${BOOST_TAG} ${BOOST_LIBRARIES} & RUNPID=$!; while kill -0 $RUNPID; do echo "... i'm alive ..."; sleep 10; done

after_success:
    - mkdir cover
    - find ./ -name "*.gcda" -exec cp "{}" ../cover \;
    - find ./ -name "*.gcno" -exec cp "{}" ../cover \;
    - lcov --directory ../cover --base-directory ../cover --capture --output-file ../cover/coverage.info
    - lcov --remove ../cover/coverage.info '/usr*' -o ../cover/coverage.info
    - gem install coveralls-lcov
    - coveralls-lcov ../cover/coverage.info
