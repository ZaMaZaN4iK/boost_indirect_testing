# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2015,
#           Alexander Zaitsev 2017, <zamazan4ik@tut.by>

dist: trusty
sudo: true
os:
    - linux
    - osx

language: generic
cache: ccache

env:
   matrix:
      - TRAVIS_EMPTY_JOB_WORKAROUND=true
# First part. Average build time: ~47-48 min
# Initiliazing time: ~5 min
#    
# Huge libraries
#    - BOOST_LIBRARIES=--libraries=geometry,math,multiprecision
#     - BOOST_LIBRARIES=--libraries=numeric,parameter
#     - BOOST_LIBRARIES=--libraries=gil,graph,graph_parallel,heap,icl,integer,move,optional,lexical_cast,pool,lambda,tokenizer,tuple,program_options,qvm,process,mp11,metaparse,polygon,predef,preprocessor,mpl,mpi,bcp,poly_collection,interprocess      
#     - BOOST_LIBRARIES=--libraries=beast,stacktrace,msm,lockfree,spirit
#     - BOOST_LIBRARIES=--libraries=io,iostreams,locale,local_function,thread,logic,multi_index
#     - BOOST_LIBRARIES=--libraries=fiber,hana,phoenix
#     - BOOST_LIBRARIES=--libraries=accumulators,algorithm,align,any,application,array,asio,assert,assign,atomic,bimap,bind,chrono,circular_buffer,compatibility,compute,concept_check,config,container,context,conversion,convert,core,coroutine,coroutine2,crc,date_time,detail,disjoint_sets,dll,document,dynamic_bitset,endian,exception,filesystem,flyweight,foreach,format,function,functional,function_types,fusion
#     - BOOST_LIBRARIES=--libraries=type_index,typeof,type_traits,units,unordered,utility,uuid,variant,vmd,wave,winapi,xpressive,static_assert,sort,timer,smart_ptr,type_erasure,random,iterator
#     - BOOST_LIBRARIES=--libraries=signals,signals2,statechart,sync,system,test,throw_exception,tr1,trie,tti,intrusive,multi_array,log
#     - BOOST_LIBRARIES=--libraries=property_map,property_tree,proto,ptr_container,python,range,ratio,rational,regex,scope_exit,serialization
    # Libs list getting: echo -n "--libraries="; for i in $(ls -d */); do echo -n "${i%%/},"; done; echo

# Installing additional tools
#addons:
#  apt:
#    sources:
#    - ubuntu-toolchain-r-test
#    packages:
#    - valgrind
#    - python-yaml
#    - lcov
#    - g++-6


matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    - env: BRANCH=develop
#    - env: BRANCH=master
    - env: NAME=CI-p-1 BOOST_LIBRARIES=--libraries=numeric,parameter
    - env: NAME=CI-p-2 BOOST_LIBRARIES=--libraries=gil,graph,graph_parallel,heap,icl,integer,move,optional,lexical_cast,pool,lambda,tokenizer,tuple,program_options,qvm,process,mp11,metaparse,polygon,predef,preprocessor,mpl,mpi,bcp,poly_collection,interprocess
    - env: NAME=CI-p-3 BOOST_LIBRARIES=--libraries=beast,stacktrace,msm,lockfree,spirit
    - env: NAME=CI-p-4 BOOST_LIBRARIES=--libraries=io,iostreams,locale,local_function,thread,logic,multi_index
    - env: NAME=CI-p-5 BOOST_LIBRARIES=--libraries=fiber,hana,phoenix
    - env: NAME=CI-p-6 BOOST_LIBRARIES=--libraries=accumulators,algorithm,align,any,application,array,asio,assert,assign,atomic,bimap,bind,chrono,circular_buffer,compatibility,compute,concept_check,config,container,context,conversion,convert,core,coroutine,coroutine2,crc,date_time,detail,disjoint_sets,dll,document,dynamic_bitset,endian,exception,filesystem,flyweight,foreach,format,function,functional,function_types,fusion
    - env: NAME=CI-p-7 BOOST_LIBRARIES=--libraries=type_index,typeof,type_traits,units,unordered,utility,uuid,variant,vmd,wave,winapi,xpressive,static_assert,sort,timer,smart_ptr,type_erasure,random,iterator
    - env: NAME=CI-p-8 BOOST_LIBRARIES=--libraries=signals,signals2,statechart,sync,system,test,throw_exception,tr1,trie,tti,intrusive,multi_array,log
    - env: NAME=CI-p-9 BOOST_LIBRARIES=--libraries=property_map,property_tree,proto,ptr_container,python,range,ratio,rational,regex,scope_exit,serialization
    - env: TOOLSET=clang-3.4
    - env: TOOLSET=clang-3.5
    - env: TOOLSET=clang-3.6
    - env: TOOLSET=clang-3.7
    - env: TOOLSET=clang-3.8
    - env: TOOLSET=clang-3.9
    - env: TOOLSET=clang-4.0 CXXFLAGS=-std=c++03
    - env: TOOLSET=clang-4.0 CXXFLAGS=-std=c++11
    - env: TOOLSET=clang-4.0 CXXFLAGS=-std=c++14
    - env: TOOLSET=clang-4.0 CXXFLAGS=-std=c++1z
    - env: TOOLSET=gcc-4.7
    - env: TOOLSET=gcc-4.8
    - env: TOOLSET=gcc-4.9
    - env: TOOLSET=gcc-5
    - env: TOOLSET=gcc-6
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=c++03
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=c++11
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=c++14
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=c++1z
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=gnu++03
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=gnu++11
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=gnu++14
    - env: TOOLSET=gcc-7 CXXFLAGS=-std=gnu++1z
    - env: TOOLSET=xcode-6.1
      os: osx
    - env: TOOLSET=xcode-6.4
      os: osx
      osx_image: xcode6.4
    - env: TOOLSET=xcode-7.3
      os: osx
      osx_image: xcode7.3
    - env: TOOLSET=xcode-8.3 CXXFLAGS=-std=c++03
      os: osx
      osx_image: xcode8.3
    - env: TOOLSET=xcode-8.3 CXXFLAGS=-std=c++11
      os: osx
      osx_image: xcode8.3
    - env: TOOLSET=xcode-8.3 CXXFLAGS=-std=c++14
      os: osx
      osx_image: xcode8.3
    - env: TOOLSET=xcode-8.3 CXXFLAGS=-std=c++1z
      os: osx
      osx_image: xcode8.3


before_install:
    - BOOST_TAG=develop
    - echo OS is ${TRAVIS_OS_NAME}
    - mkdir $HOME/do_test
    - cd $HOME/do_test
    - wget https://raw.githubusercontent.com/boostorg/regression/develop/testing/src/run.py
    - wget https://raw.githubusercontent.com/boostorg/regression/develop/ci/src/ci_boost_common.py
    - wget https://raw.githubusercontent.com/boostorg/regression/develop/ci/src/ci_boost_library_test.py

install:
    - python ci_boost_library_test.py install
    
script:
    - while true ; do echo "... i'm alive ..."; sleep 60; done &
    - python run.py --runner=${NAME}-${TOOLSET}-${CXXFLAGS} --bjam-options="-j2 cxxflags=${CXXFLAGS}" --toolsets=${TOOLSET} --tag=${BRANCH} ${BOOST_LIBRARIES}

    
#after_success:
#    - mkdir cover
#    - find ./ -name "*.gcda" -exec cp "{}" ../cover \;
#    - find ./ -name "*.gcno" -exec cp "{}" ../cover \;
#    - lcov --directory ../cover --base-directory ../cover --capture --output-file ../cover/coverage.info
#    - lcov --remove ../cover/coverage.info '/usr*' -o ../cover/coverage.info
#    - gem install coveralls-lcov
#    - coveralls-lcov ../cover/coverage.info
