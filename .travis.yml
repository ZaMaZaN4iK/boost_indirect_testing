# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2015,
#           Alexander Zaitsev 2017, <zamazan4ik@tut.by>

sudo: true
os:
    - linux

env:
# First part. Average build time: ~47-48 min
# Initiliazing time: ~5 min
#    
# Huge libraries
#    - BOOST_LIBRARIES=--libraries=geometry,interprocess
     - BOOST_LIBRARIES=--libraries=interprocess
     - BOOST_LIBRARIES=--libraries=log
     - BOOST_LIBRARIES=--libraries=logic
     - BOOST_LIBRARIES=--libraries=math
     - BOOST_LIBRARIES=--libraries=multi_index
     - BOOST_LIBRARIES=--libraries=multiprecision
     - BOOST_LIBRARIES=--libraries=numeric
     - BOOST_LIBRARIES=--libraries=parameter
     - BOOST_LIBRARIES=--libraries=gil,graph,graph_parallel,heap,icl,integer,move,optional,lexical_cast,pool,lambda,tokenizer,tuple,program_options,qvm,process,mp11,metaparse,polygon,predef,preprocessor,mpl,mpi,bcp,poly_collection      
    #Try to test huge libraries
     - BOOST_LIBRARIES=--libraries=beast,stacktrace,msm,lockfree,spirit
     - BOOST_LIBRARIES=--libraries=io,iostreams,locale,local_function,thread
     - BOOST_LIBRARIES=--libraries=fiber,hana,phoenix
     - BOOST_LIBRARIES=--libraries=accumulators,algorithm,align,any,application,array,asio,assert,assign,atomic,bimap,bind,chrono,circular_buffer,compatibility,compute,concept_check,config,container,context,conversion,convert,core,coroutine,coroutine2,crc,date_time,detail,disjoint_sets,dll,document,dynamic_bitset,endian,exception,filesystem,flyweight,foreach,format,function,functional,function_types,fusion
     - BOOST_LIBRARIES=--libraries=type_index,typeof,type_traits,units,unordered,utility,uuid,variant,vmd,wave,winapi,xpressive,static_assert,sort,timer,smart_ptr,type_erasure,random,iterator
     - BOOST_LIBRARIES=--libraries=signals,signals2,statechart,sync,system,test,throw_exception,tr1,trie,tti,intrusive,multi_array
     - BOOST_LIBRARIES=--libraries=property_map,property_tree,proto,ptr_container,python,range,ratio,rational,regex,scope_exit,serialization
    # Libs list getting: echo -n "--libraries="; for i in $(ls -d */); do echo -n "${i%%/},"; done; echo

# Installing additional tools
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
#    - valgrind
    - python-yaml
#    - lcov
    - g++-6

before_install:
    - BOOST_TAG=develop
    - echo OS is ${TRAVIS_OS_NAME}
    - mkdir $HOME/do_test
    - cd $HOME/do_test
    - wget https://raw.githubusercontent.com/boostorg/regression/develop/testing/src/run.py

script:
    - while true ; do echo "... i'm alive ..."; sleep 60; done &
    - python run.py --runner=indirect_travisci_tests --bjam-options=-j2 --toolsets=gcc-6 --tag=${BOOST_TAG} ${BOOST_LIBRARIES}
#    - cat /home/travis/do_test/results/bjam.log

#after_success:
#    - mkdir cover
#    - find ./ -name "*.gcda" -exec cp "{}" ../cover \;
#    - find ./ -name "*.gcno" -exec cp "{}" ../cover \;
#    - lcov --directory ../cover --base-directory ../cover --capture --output-file ../cover/coverage.info
#    - lcov --remove ../cover/coverage.info '/usr*' -o ../cover/coverage.info
#    - gem install coveralls-lcov
#    - coveralls-lcov ../cover/coverage.info
